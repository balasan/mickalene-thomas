.work-enter:not(.work-enter-active),
.work-leave:not(.work-leave-active ){
  transition-delay:0s !important;
  transition-duration: 0s !important;
}

.work-enter {
  opacity: 0;
  transform: translate3d(0,0%,0) rotateX(-90deg);
  transform-origin: 50% 0%;
}

.work-enter.work-enter-active {
  opacity: 1;
  transform-origin: 50% 0%;
  transform:   translate3d(0,0%,0) rotateX(0deg);
  transition: opacity .6s easeOutQuart, transform .7s easeOutQuart;

}

.work-leave{
  opacity: 1;
  transform:   translate3d(0,0%,0);
}

.work-leave.work-leave-active {
  opacity: 0;
  transition: opacity .2s easeOutQuart, transform .2s easeOutQuart;
  transform: translate3d(-100px,0,0);
}

.work-appear {
  opacity: 0;
  transform: translate3d(0,0%,0) rotateX(-90deg);
  transform-origin: 50% 0%;
}

.work-appear.work-appear-active {
  opacity: 1;
  transform-origin: 50% 0%;
  transform:   translate3d(0,0%,0) rotateX(0deg);
  transition: opacity .6s easeOutQuart, transform .7s easeOutQuart;
}


.single-enter:not(.single-enter-active),
.single-leave:not(.single-leave-active ){
  transition-delay:0s !important;
  transition-duration: 0s !important;
}

.single-enter {
  opacity: 0;
  transform: translate3d(0,0%,0) rotateX(-90deg);
  transform-origin: 50% 0%;
}

.single-enter.single-enter-active {
  opacity: 1;
  transform-origin: 50% 0%;
  transform:   translate3d(0,0%,0) rotateX(0deg);
  transition: opacity .6s easeOutQuart, transform .7s easeOutQuart;

}

.single-leave{
  opacity: 1;
  transform:   translate3d(0,0%,0);
}

.single-leave.single-leave-active {
  opacity: 0;
  transition: opacity .2s easeOutQuart, transform .2s easeOutQuart;
  transform: translate3d(-100px,0,0);
}

.single-appear {
  opacity: 0;
  transform: translate3d(0,0%,-200px);
  transform-origin: 50% 0%;
}

.single-appear.single-appear-active {
  opacity: 1;
  transform-origin: 50% 0%;
  transform:   translate3d(0,0%,0);
  transition: opacity .9s easeOutQuart, transform .7s easeOutQuart;
}

/*.grid-enter{
    opacity: 0;
    transform:   translate(0,0);
    transform: translate3d(0,0,0);
}

.grid-enter.grid-enter-active {
  opacity: 1;
  transform:   translate(0,0);
  transform: translate3d(0,0,0);
}
.grid-leave {
  opacity: 1;
  transform:   translate(0,0,0);
  transform: translate3d(0,0,0);
}
.grid-leave.grid-leave-active {
  opacity: 0;
  transform:   translate(0,0);
  transform: translate3d(0,0,0);
}*/

/*need to tweak this to start iteration over on each row*/
/*@for $j from 1 through 100 {
  $i : 0;
  @for $i from 1 through 10 {
    .rowId-$j:nth-of-type($i)
      {
        transition-delay: calc(0.1s * $i);
      }
  }
}*/
